
package uk.ac.ebi.jdispatcher.soap.clustalo;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "JDispatcherService", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface JDispatcherService {


    /**
     * Submit an analysis job
     * 
     * @param title
     * @param email
     * @param parameters
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:Run")
    @WebResult(name = "jobId", targetNamespace = "")
    @RequestWrapper(localName = "run", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.Run")
    @ResponseWrapper(localName = "runResponse", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.RunResponse")
    public String run(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "parameters", targetNamespace = "")
        InputParameters parameters);

    /**
     * Get the status of a submitted job
     * 
     * @param jobId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(action = "urn:GetStatus")
    @WebResult(name = "status", targetNamespace = "")
    @RequestWrapper(localName = "getStatus", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetStatus")
    @ResponseWrapper(localName = "getStatusResponse", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetStatusResponse")
    public String getStatus(
        @WebParam(name = "jobId", targetNamespace = "")
        String jobId);

    /**
     * Get the list of renderers available to output a job result (i.e. the list of available output types)
     * 
     * @param jobId
     * @return
     *     returns uk.ac.ebi.jdispatcher.soap.clustalo.WsResultTypes
     */
    @WebMethod(action = "urn:GetResultTypes")
    @WebResult(name = "resultTypes", targetNamespace = "")
    @RequestWrapper(localName = "getResultTypes", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetResultTypes")
    @ResponseWrapper(localName = "getResultTypesResponse", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetResultTypesResponse")
    public WsResultTypes getResultTypes(
        @WebParam(name = "jobId", targetNamespace = "")
        String jobId);

    /**
     * Get a job result formatted using a particular renderer
     * 
     * @param jobId
     * @param parameters
     * @param type
     * @return
     *     returns byte[]
     */
    @WebMethod(action = "urn:GetResult")
    @WebResult(name = "output", targetNamespace = "")
    @RequestWrapper(localName = "getResult", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetResult")
    @ResponseWrapper(localName = "getResultResponse", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetResultResponse")
    public byte[] getResult(
        @WebParam(name = "jobId", targetNamespace = "")
        String jobId,
        @WebParam(name = "type", targetNamespace = "")
        String type,
        @WebParam(name = "parameters", targetNamespace = "")
        WsRawOutputParameters parameters);

    /**
     * List the names of the parameters available before submission
     * 
     * @return
     *     returns uk.ac.ebi.jdispatcher.soap.clustalo.WsParameters
     */
    @WebMethod(action = "urn:GetParameters")
    @WebResult(name = "parameters", targetNamespace = "")
    @RequestWrapper(localName = "getParameters", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetParameters")
    @ResponseWrapper(localName = "getParametersResponse", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetParametersResponse")
    public WsParameters getParameters();

    /**
     * Get some details about a parameter (e.g. name, description, values, etc.)
     * 
     * @param parameterId
     * @return
     *     returns uk.ac.ebi.jdispatcher.soap.clustalo.WsParameterDetails
     */
    @WebMethod(action = "urn:GetParameterDetails")
    @WebResult(name = "parameterDetails", targetNamespace = "")
    @RequestWrapper(localName = "getParameterDetails", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetParameterDetails")
    @ResponseWrapper(localName = "getParameterDetailsResponse", targetNamespace = "http://soap.jdispatcher.ebi.ac.uk", className = "uk.ac.ebi.jdispatcher.soap.clustalo.GetParameterDetailsResponse")
    public WsParameterDetails getParameterDetails(
        @WebParam(name = "parameterId", targetNamespace = "")
        String parameterId);

}
